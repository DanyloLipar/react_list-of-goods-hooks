{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsList","className","map","good","goodsFromServer","App","useState","isVisible","setIsVisible","isReversed","setIsReversed","sortBy","setSortBy","showGoods","sort","el1","el2","length","localeCompare","reverse","visibleGoods","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yNAOaA,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,mCACE,oBAAIC,UAAU,OAAd,SACGD,EAAUE,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,WCRbC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA8GaC,EA3GO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAoDA,OACE,sBAAKX,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,+CACCM,GAAa,cAAC,EAAD,CAAWP,UA3BV,WACnB,IAAMa,EAAS,UAAOT,GAEtB,OAAQO,GACN,IAAK,SACHE,EAAUC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAASD,EAAIC,UAC9C,MAEF,IAAK,WACHJ,EAAUC,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIG,cAAcF,MAWnD,OAJIP,GACFI,EAAUM,UAGLN,EAOiCO,QAEtC,sBAAKnB,UAAU,eAAf,UACE,wBACEoB,KAAK,SACLC,QA3DK,WACXd,GAAa,IAwDT,mBAMCD,GACC,sBAAKN,UAAU,qBAAf,UACE,wBACEoB,KAAK,SACLC,QA/DG,WACbd,GAAa,GACbE,GAAc,GACdE,EAAU,KA0DF,oBAMA,wBACES,KAAK,SACLC,QA/DK,WACfZ,GAAeD,IA4DP,qBAMA,wBACEY,KAAK,SACLC,QAjEE,WACZZ,GAAc,GACdE,EAAU,KA6DF,mBAMA,wBACES,KAAK,SACLC,QAlES,WACnBV,EAAU,aA+DF,iCAMA,wBACES,KAAK,SACLC,QApEO,WACjBV,EAAU,WAiEF,sCC5GZW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.c146729c.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\n\ntype Props = {\n  goodsList: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsList }) => {\n  return (\n    <>\n      <ul className=\"list\">\n        {goodsList.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const show = () => {\n    setIsVisible(true);\n  };\n\n  const cancel = () => {\n    setIsVisible(false);\n    setIsReversed(false);\n    setSortBy('');\n  };\n\n  const reversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy('');\n  };\n\n  const sortAlphabet = () => {\n    setSortBy('alphabet');\n  };\n\n  const sortLength = () => {\n    setSortBy('length');\n  };\n\n  const visibleGoods = () => {\n    const showGoods = [...goodsFromServer];\n\n    switch (sortBy) {\n      case 'length':\n        showGoods.sort((el1, el2) => el1.length - el2.length);\n        break;\n\n      case 'alphabet':\n        showGoods.sort((el1, el2) => el1.localeCompare(el2));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      showGoods.reverse();\n    }\n\n    return showGoods;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__list\">\n        <h1>List of Goods</h1>\n        {isVisible && <GoodsList goodsList={visibleGoods()} />}\n      </div>\n      <div className=\"App__buttons\">\n        <button\n          type=\"button\"\n          onClick={show}\n        >\n          Start\n        </button>\n        {isVisible && (\n          <div className=\"App__buttons-close\">\n            <button\n              type=\"button\"\n              onClick={cancel}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              onClick={reversed}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortAlphabet}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortLength}\n            >\n              Sort by length\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}